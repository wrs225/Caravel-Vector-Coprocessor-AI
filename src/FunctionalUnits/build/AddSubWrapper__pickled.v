//-------------------------------------------------------------------------
// AddSubWrapper.v
//-------------------------------------------------------------------------
// This file is generated by PyMTL SystemVerilog translation pass.

// PyMTL VerilogPlaceholder AddSub Definition
// Full name: AddSub__WIDTH_32
// At /home/will/Desktop/personal_projects/Caravel-Vector-Coprocessor-AI/src/FunctionalUnits/sim/addsub.py

//***********************************************************
// Pickled source file of placeholder AddSub__WIDTH_32
//***********************************************************

//-----------------------------------------------------------
// Dependency of placeholder AddSub
//-----------------------------------------------------------

`ifndef ADDSUB
`define ADDSUB

// The source code below are included because they are specified
// as the v_libs Verilog placeholder option of component AddSub__WIDTH_32.

// If you get a duplicated def error from files included below, please
// make sure they are included either through the v_libs option or the
// explicit `include statement in the Verilog source code -- if they
// appear in both then they will be included twice!


// End of all v_libs files for component AddSub__WIDTH_32

`line 1 "AddSub.v" 0
module AddSub #(parameter WIDTH = 32) (
    input logic [WIDTH-1:0] A,
    input logic [WIDTH-1:0] B,
    input logic AddSub, // 0 for Add, 1 for Subtract
    output logic [WIDTH-1:0] Result
);
    always_comb begin
        if (AddSub == 0) begin
            Result = A + B;
        end else begin
            Result = A - B;
        end
    end
endmodule
`endif /* ADDSUB */
//-----------------------------------------------------------
// Wrapper of placeholder AddSub__WIDTH_32
//-----------------------------------------------------------

`ifndef ADDSUB__WIDTH_32
`define ADDSUB__WIDTH_32

module AddSubWrapper
(
  input logic reset,
  input logic clk,
  input logic [32-1:0] A ,
  input logic [1-1:0] AddSub ,
  input logic [32-1:0] B ,
  output logic [32-1:0] Result 
);
  AddSub
  #(
    .WIDTH( 32 )
  ) v
  (
    .A( A ),
    .AddSub( AddSub ),
    .B( B ),
    .Result( Result )
  );
endmodule

`endif /* ADDSUB__WIDTH_32 */

